diff -u -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak origDMD/import.c dmd/import.c
--- origDMD/import.c	2009-04-06 02:47:20 +0200
+++ dmd/import.c	2009-05-06 21:39:56 +0200
@@ -112,9 +112,21 @@
 }
 
 
+void printfImportName(Import* imp) {
+	if (imp->packages)
+	{
+	    for (size_t i = 0; i < imp->packages->dim; i++)
+	    {   Identifier *pid = (Identifier *)imp->packages->data[i];
+		printf("%s.", pid->toChars());
+	    }
+	}
+	printf("%s", imp->id->toChars());
+}
+
+
 void Import::semantic(Scope *sc)
 {
-    //printf("Import::semantic('%s')\n", toChars());
+	//printf("Import::semantic('%s')\n", toChars());
 
     load(sc);
 
@@ -162,6 +174,26 @@
 	sc = sc->pop();
     }
     //printf("-Import::semantic('%s'), pkg = %p\n", toChars(), pkg);
+
+	if (global.params.moduleDeps != NULL) {
+		OutBuffer *const ob = global.params.moduleDeps;
+		ob->printf("%s (%s) : ",
+				sc->module->toPrettyChars(),
+				sc->module->srcfile->toChars()
+		);
+
+		if (this->packages) {
+		    for (size_t i = 0; i < this->packages->dim; i++) {
+				Identifier *pid = (Identifier *)this->packages->data[i];
+				ob->printf("%s.", pid->toChars());
+		    }
+		}
+		ob->printf("%s (%s)",
+				this->id->toChars(),
+				mod ? mod->srcfile->toChars() : "???"
+		);
+		ob->writenl();
+	}
 }
 
 void Import::semantic2(Scope *sc)
diff -u -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak origDMD/mars.c dmd/mars.c
--- origDMD/mars.c	2009-04-06 02:47:20 +0200
+++ dmd/mars.c	2009-05-06 21:31:30 +0200
@@ -208,6 +208,7 @@
   -debug=ident   compile in debug code identified by ident\n\
   -debuglib=name    set symbolic debug library to name\n\
   -defaultlib=name  set default library to name\n\
+  -deps=filename write module dependencies to filename\n\
   -g             add symbolic debug info\n\
   -gc            add symbolic debug info, pretend to be C\n\
   -H             generate 'header' file\n\
@@ -294,6 +295,9 @@
     global.params.objfiles = new Array();
     global.params.ddocfiles = new Array();
 
+	global.params.moduleDeps = NULL;
+	global.params.moduleDepsFile = NULL;
+
 #if TARGET_WINDOS
     global.params.defaultlibname = "phobos";
 #elif TARGET_LINUX || TARGET_OSX || TARGET_FREEBSD
@@ -581,6 +585,11 @@
 		setdebuglib = 1;
 		global.params.debuglibname = p + 1 + 9;
 	    }
+	    else if (memcmp(p + 1, "deps=", 5) == 0)
+	    {
+		global.params.moduleDepsFile = p + 1 + 5;
+		global.params.moduleDeps = new OutBuffer;
+	    }
 	    else if (memcmp(p + 1, "man", 3) == 0)
 	    {
 #if _WIN32
@@ -1047,6 +1056,15 @@
     if (global.errors)
 	fatal();
 
+	if (global.params.moduleDeps != NULL) {
+		assert (global.params.moduleDepsFile != NULL);
+
+		File deps(global.params.moduleDepsFile);
+		OutBuffer* ob = global.params.moduleDeps;
+		deps.setbuffer((void*)ob->data, ob->offset);
+		deps.write();
+	}
+
     // Scan for functions to inline
     if (global.params.useInline)
     {
diff -u -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak origDMD/mars.h dmd/mars.h
--- origDMD/mars.h	2009-04-06 02:47:20 +0200
+++ dmd/mars.h	2009-05-06 21:00:27 +0200
@@ -102,6 +102,7 @@
 
 
 struct Array;
+struct OutBuffer;
 
 // Put command line switches in here
 struct Param
@@ -171,6 +172,9 @@
 
     const char *xmlname;	// filename for XML output
 
+	OutBuffer *moduleDeps;
+	char *moduleDepsFile;
+
     // Hidden debug switches
     char debuga;
     char debugb;
