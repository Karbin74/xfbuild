diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/attrib.c dmd/attrib.c
--- origDMD/attrib.c	2009-04-06 02:47:20 +0200
+++ dmd/attrib.c	2009-05-09 03:10:29 +0200
@@ -26,6 +26,7 @@
 #include "module.h"
 #include "parse.h"
 #include "template.h"
+#include "hdrgen.h"
 
 extern void obj_includelib(const char *name);
 void obj_startaddress(Symbol *s);
@@ -345,7 +346,10 @@ void StorageClassDeclaration::stcToCBuff
 void StorageClassDeclaration::toCBuffer(OutBuffer *buf, HdrGenState *hgs)
 {
     stcToCBuffer(buf, stc);
+	unsigned prevStc = hgs->stc;
+	hgs->stc |= stc;
     AttribDeclaration::toCBuffer(buf, hgs);
+	hgs->stc = prevStc;
 }
 
 /********************************* LinkDeclaration ****************************/
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/class.c dmd/class.c
--- origDMD/class.c	2009-04-06 02:47:20 +0200
+++ dmd/class.c	2009-05-09 01:57:05 +0200
@@ -26,6 +26,7 @@
 #include "module.h"
 #include "expression.h"
 #include "statement.h"
+#include "hdrgen.h"
 
 /********************************* ClassDeclaration ****************************/
 
@@ -702,6 +703,8 @@ void ClassDeclaration::toCBuffer(OutBuff
     buf->writenl();
     buf->writeByte('{');
     buf->writenl();
+	int prevInClass = hgs->inClass;
+	hgs->inClass = true;
     for (int i = 0; i < members->dim; i++)
     {
 	Dsymbol *s = (Dsymbol *)members->data[i];
@@ -709,6 +712,7 @@ void ClassDeclaration::toCBuffer(OutBuff
 	buf->writestring("    ");
 	s->toCBuffer(buf, hgs);
     }
+	hgs->inClass = prevInClass;
     buf->writestring("}");
     buf->writenl();
 }
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/declaration.c dmd/declaration.c
--- origDMD/declaration.c	2009-04-06 02:47:20 +0200
+++ dmd/declaration.c	2009-05-09 05:01:49 +0200
@@ -1088,7 +1088,22 @@ Dsymbol *VarDeclaration::toAlias()
 
 void VarDeclaration::toCBuffer(OutBuffer *buf, HdrGenState *hgs)
 {
-    StorageClassDeclaration::stcToCBuffer(buf, storage_class);
+	unsigned stc = storage_class;
+	bool stripValue =
+		hgs->hdrgen &&
+		0 == (stc & STCconst) &&
+		!hgs->inFunc &&
+		0 == (hgs->stc & STCconst) &&
+//		((!hgs->inStruct && !hgs->inClass) || 0 != (stc & STCstatic)) &&
+		!hgs->inStruct &&
+		!hgs->inClass &&
+		type;
+
+	if (stripValue) {
+		stc |= STCextern;
+	}
+
+    StorageClassDeclaration::stcToCBuffer(buf, stc);
 
     /* If changing, be sure and fix CompoundDeclarationStatement::toCBuffer()
      * too.
@@ -1097,7 +1112,7 @@ void VarDeclaration::toCBuffer(OutBuffer
 	type->toCBuffer(buf, ident, hgs);
     else
 	buf->writestring(ident->toChars());
-    if (init)
+    if (init && !stripValue)
     {	buf->writestring(" = ");
 	init->toCBuffer(buf, hgs);
     }
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/expression.c dmd/expression.c
--- origDMD/expression.c	2009-04-06 02:47:20 +0200
+++ dmd/expression.c	2009-05-09 04:57:52 +0200
@@ -2887,9 +2887,10 @@ int ArrayLiteralExp::canThrow()
 
 void ArrayLiteralExp::toCBuffer(OutBuffer *buf, HdrGenState *hgs)
 {
-    buf->writeByte('[');
+	// DMD doesn't currently like [1, 2, 3][idx]
+    buf->writestring("([");
     argsToCBuffer(buf, elements, hgs);
-    buf->writeByte(']');
+    buf->writestring("])");
 }
 
 void ArrayLiteralExp::toMangleBuffer(OutBuffer *buf)
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/func.c dmd/func.c
--- origDMD/func.c	2009-04-06 02:47:20 +0200
+++ dmd/func.c	2009-05-09 04:10:02 +0200
@@ -1249,8 +1249,11 @@ void FuncDeclaration::toCBuffer(OutBuffe
 
 void FuncDeclaration::bodyToCBuffer(OutBuffer *buf, HdrGenState *hgs)
 {
+	int prevInFunc = hgs->inFunc;
+	hgs->inFunc = true;
+
     if (fbody &&
-	(!hgs->hdrgen || hgs->tpltMember || canInline(1,1))
+	(!hgs->hdrgen || hgs->tpltMember || canInline(1,1) || !(hgs->inClass || hgs->inStruct))
        )
     {	buf->writenl();
 
@@ -1288,6 +1291,8 @@ void FuncDeclaration::bodyToCBuffer(OutB
     {	buf->writeByte(';');
 	buf->writenl();
     }
+
+	hgs->inFunc = prevInFunc;
 }
 
 /****************************************************
@@ -2200,7 +2205,8 @@ void FuncLiteralDeclaration::toCBuffer(O
     if (!iddel)
 	iddel = new Identifier("delegate", 0);
 
-    type->toCBuffer(buf, ((tok == TOKdelegate) ? iddel : idfunc), hgs);
+	buf->writestring(((tok == TOKdelegate) ? "delegate " : "function "));
+    type->toCBuffer(buf, NULL/*((tok == TOKdelegate) ? iddel : idfunc)*/, hgs);
     bodyToCBuffer(buf, hgs);
 }
 
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/hdrgen.h dmd/hdrgen.h
--- origDMD/hdrgen.h	2009-04-06 02:47:20 +0200
+++ dmd/hdrgen.h	2009-05-09 03:08:49 +0200
@@ -21,7 +21,11 @@ struct HdrGenState
     int inDotExp;
     int inBinExp;
     int inArrExp;
+	int inFunc;
+	int inClass;
+	int inStruct;
     int emitInst;
+	unsigned stc;
     struct
     {
         int init;
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/import.c dmd/import.c
--- origDMD/import.c	2009-04-06 02:47:20 +0200
+++ dmd/import.c	2009-05-09 03:55:08 +0200
@@ -162,6 +162,26 @@ void Import::semantic(Scope *sc)
 	sc = sc->pop();
     }
     //printf("-Import::semantic('%s'), pkg = %p\n", toChars(), pkg);
+
+	if (global.params.moduleDeps != NULL) {
+		OutBuffer *const ob = global.params.moduleDeps;
+		ob->printf("%s (%s) : ",
+				sc->module->toPrettyChars(),
+				sc->module->srcfile->toChars()
+		);
+
+		if (this->packages) {
+		    for (size_t i = 0; i < this->packages->dim; i++) {
+				Identifier *pid = (Identifier *)this->packages->data[i];
+				ob->printf("%s.", pid->toChars());
+		    }
+		}
+		ob->printf("%s (%s)",
+				this->id->toChars(),
+				mod ? mod->srcfile->toChars() : "???"
+		);
+		ob->writenl();
+	}
 }
 
 void Import::semantic2(Scope *sc)
@@ -253,7 +273,27 @@ void Import::toCBuffer(OutBuffer *buf, H
 	    buf->printf("%s.", pid->toChars());
 	}
     }
-    buf->printf("%s;", id->toChars());
+    buf->printf("%s", id->toChars());
+	if (names.dim > 0) {
+		buf->writebyte(':');
+	    for (size_t i = 0; i < names.dim; i++)
+	    {
+			if (i > 0) {
+				buf->writebyte(',');
+			}
+
+			Identifier *name = (Identifier *)names.data[i];
+			Identifier *alias = (Identifier *)aliases.data[i];
+
+			if (!alias) {
+				buf->printf("%s", name->toChars());
+			    alias = name;
+			} else {
+				buf->printf("%s=%s", alias->toChars(), name->toChars());
+			}
+		}
+	}
+	buf->writebyte(';');
     buf->writenl();
 }
 
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/mars.c dmd/mars.c
--- origDMD/mars.c	2009-04-06 02:47:20 +0200
+++ dmd/mars.c	2009-05-09 01:34:55 +0200
@@ -208,6 +208,7 @@ Usage:\n\
   -debug=ident   compile in debug code identified by ident\n\
   -debuglib=name    set symbolic debug library to name\n\
   -defaultlib=name  set default library to name\n\
+  -deps=filename write module dependencies to filename\n\
   -g             add symbolic debug info\n\
   -gc            add symbolic debug info, pretend to be C\n\
   -H             generate 'header' file\n\
@@ -294,6 +295,9 @@ int main(int argc, char *argv[])
     global.params.objfiles = new Array();
     global.params.ddocfiles = new Array();
 
+	global.params.moduleDeps = NULL;
+	global.params.moduleDepsFile = NULL;
+
 #if TARGET_WINDOS
     global.params.defaultlibname = "phobos";
 #elif TARGET_LINUX || TARGET_OSX || TARGET_FREEBSD
@@ -581,6 +585,11 @@ int main(int argc, char *argv[])
 		setdebuglib = 1;
 		global.params.debuglibname = p + 1 + 9;
 	    }
+	    else if (memcmp(p + 1, "deps=", 5) == 0)
+	    {
+		global.params.moduleDepsFile = p + 1 + 5;
+		global.params.moduleDeps = new OutBuffer;
+	    }
 	    else if (memcmp(p + 1, "man", 3) == 0)
 	    {
 #if _WIN32
@@ -1047,6 +1056,15 @@ int main(int argc, char *argv[])
     if (global.errors)
 	fatal();
 
+	if (global.params.moduleDeps != NULL) {
+		assert (global.params.moduleDepsFile != NULL);
+
+		File deps(global.params.moduleDepsFile);
+		OutBuffer* ob = global.params.moduleDeps;
+		deps.setbuffer((void*)ob->data, ob->offset);
+		deps.write();
+	}
+
     // Scan for functions to inline
     if (global.params.useInline)
     {
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/mars.h dmd/mars.h
--- origDMD/mars.h	2009-04-06 02:47:20 +0200
+++ dmd/mars.h	2009-05-06 21:00:27 +0200
@@ -102,6 +102,7 @@ the target object file format:
 
 
 struct Array;
+struct OutBuffer;
 
 // Put command line switches in here
 struct Param
@@ -171,6 +172,9 @@ struct Param
 
     const char *xmlname;	// filename for XML output
 
+	OutBuffer *moduleDeps;
+	char *moduleDepsFile;
+
     // Hidden debug switches
     char debuga;
     char debugb;
diff -d --strip-trailing-cr --ignore-tab-expansion -x '*.obj' -x '*.exe' -x '*.swp' -x '*.map' -x win32.mak -rpu origDMD/struct.c dmd/struct.c
--- origDMD/struct.c	2009-04-06 02:47:20 +0200
+++ dmd/struct.c	2009-05-09 01:57:12 +0200
@@ -19,6 +19,7 @@
 #include "module.h"
 #include "id.h"
 #include "statement.h"
+#include "hdrgen.h"
 
 /********************************* AggregateDeclaration ****************************/
 
@@ -465,6 +466,8 @@ void StructDeclaration::toCBuffer(OutBuf
     buf->writenl();
     buf->writeByte('{');
     buf->writenl();
+	int prevInStruct = hgs->inStruct;
+	hgs->inStruct = true;
     for (i = 0; i < members->dim; i++)
     {
 	Dsymbol *s = (Dsymbol *)members->data[i];
@@ -472,6 +475,7 @@ void StructDeclaration::toCBuffer(OutBuf
 	buf->writestring("    ");
 	s->toCBuffer(buf, hgs);
     }
+	hgs->inStruct = prevInStruct;
     buf->writeByte('}');
     buf->writenl();
 }
